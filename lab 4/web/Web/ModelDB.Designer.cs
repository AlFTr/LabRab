//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("ModelDB", "Контактное_ЛицоДоговор", "Контактное_Лицо", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Web.Контактное_Лицо), "Договор", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Web.Договор), true)]
[assembly: EdmRelationshipAttribute("ModelDB", "ДоговорПриложениеДоговора", "Договор", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Web.Договор), "ПриложениеДоговора", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Web.ПриложениеДоговора), true)]
[assembly: EdmRelationshipAttribute("ModelDB", "ОрганизацияДоговор", "Организация", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Web.Организация), "Договор", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Web.Договор), true)]

#endregion

namespace Web
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class ModelDBContainer : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект ModelDBContainer, используя строку соединения из раздела "ModelDBContainer" файла конфигурации приложения.
        /// </summary>
        public ModelDBContainer() : base("name=ModelDBContainer", "ModelDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта ModelDBContainer.
        /// </summary>
        public ModelDBContainer(string connectionString) : base(connectionString, "ModelDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта ModelDBContainer.
        /// </summary>
        public ModelDBContainer(EntityConnection connection) : base(connection, "ModelDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Контактное_Лицо> Контактное_ЛицоНабор
        {
            get
            {
                if ((_Контактное_ЛицоНабор == null))
                {
                    _Контактное_ЛицоНабор = base.CreateObjectSet<Контактное_Лицо>("Контактное_ЛицоНабор");
                }
                return _Контактное_ЛицоНабор;
            }
        }
        private ObjectSet<Контактное_Лицо> _Контактное_ЛицоНабор;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Договор> ДоговорНабор
        {
            get
            {
                if ((_ДоговорНабор == null))
                {
                    _ДоговорНабор = base.CreateObjectSet<Договор>("ДоговорНабор");
                }
                return _ДоговорНабор;
            }
        }
        private ObjectSet<Договор> _ДоговорНабор;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ПриложениеДоговора> ПриложениеДоговораНабор
        {
            get
            {
                if ((_ПриложениеДоговораНабор == null))
                {
                    _ПриложениеДоговораНабор = base.CreateObjectSet<ПриложениеДоговора>("ПриложениеДоговораНабор");
                }
                return _ПриложениеДоговораНабор;
            }
        }
        private ObjectSet<ПриложениеДоговора> _ПриложениеДоговораНабор;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Организация> ОрганизацияНабор
        {
            get
            {
                if ((_ОрганизацияНабор == null))
                {
                    _ОрганизацияНабор = base.CreateObjectSet<Организация>("ОрганизацияНабор");
                }
                return _ОрганизацияНабор;
            }
        }
        private ObjectSet<Организация> _ОрганизацияНабор;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Контактное_ЛицоНабор. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToКонтактное_ЛицоНабор(Контактное_Лицо контактное_Лицо)
        {
            base.AddObject("Контактное_ЛицоНабор", контактное_Лицо);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ДоговорНабор. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToДоговорНабор(Договор договор)
        {
            base.AddObject("ДоговорНабор", договор);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ПриложениеДоговораНабор. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToПриложениеДоговораНабор(ПриложениеДоговора приложениеДоговора)
        {
            base.AddObject("ПриложениеДоговораНабор", приложениеДоговора);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ОрганизацияНабор. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToОрганизацияНабор(Организация организация)
        {
            base.AddObject("ОрганизацияНабор", организация);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelDB", Name="Договор")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Договор : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Договор.
        /// </summary>
        /// <param name="номер">Исходное значение свойства Номер.</param>
        /// <param name="название">Исходное значение свойства Название.</param>
        /// <param name="дата_начала_действия">Исходное значение свойства Дата_начала_действия.</param>
        /// <param name="дата_окончания_действия">Исходное значение свойства Дата_окончания_действия.</param>
        /// <param name="максимальная_сумма">Исходное значение свойства Максимальная_сумма.</param>
        /// <param name="контактное_ЛицоНомер1">Исходное значение свойства Контактное_ЛицоНомер1.</param>
        /// <param name="организацияНомер1">Исходное значение свойства ОрганизацияНомер1.</param>
        public static Договор CreateДоговор(global::System.Int32 номер, global::System.String название, global::System.DateTime дата_начала_действия, global::System.DateTime дата_окончания_действия, global::System.Double максимальная_сумма, global::System.Int32 контактное_ЛицоНомер1, global::System.Int32 организацияНомер1)
        {
            Договор договор = new Договор();
            договор.Номер = номер;
            договор.Название = название;
            договор.Дата_начала_действия = дата_начала_действия;
            договор.Дата_окончания_действия = дата_окончания_действия;
            договор.Максимальная_сумма = максимальная_сумма;
            договор.Контактное_ЛицоНомер1 = контактное_ЛицоНомер1;
            договор.ОрганизацияНомер1 = организацияНомер1;
            return договор;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Номер
        {
            get
            {
                return _Номер;
            }
            set
            {
                if (_Номер != value)
                {
                    OnНомерChanging(value);
                    ReportPropertyChanging("Номер");
                    _Номер = StructuralObject.SetValidValue(value, "Номер");
                    ReportPropertyChanged("Номер");
                    OnНомерChanged();
                }
            }
        }
        private global::System.Int32 _Номер;
        partial void OnНомерChanging(global::System.Int32 value);
        partial void OnНомерChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                OnНазваниеChanging(value);
                ReportPropertyChanging("Название");
                _Название = StructuralObject.SetValidValue(value, false, "Название");
                ReportPropertyChanged("Название");
                OnНазваниеChanged();
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_начала_действия
        {
            get
            {
                return _Дата_начала_действия;
            }
            set
            {
                OnДата_начала_действияChanging(value);
                ReportPropertyChanging("Дата_начала_действия");
                _Дата_начала_действия = StructuralObject.SetValidValue(value, "Дата_начала_действия");
                ReportPropertyChanged("Дата_начала_действия");
                OnДата_начала_действияChanged();
            }
        }
        private global::System.DateTime _Дата_начала_действия;
        partial void OnДата_начала_действияChanging(global::System.DateTime value);
        partial void OnДата_начала_действияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Дата_окончания_действия
        {
            get
            {
                return _Дата_окончания_действия;
            }
            set
            {
                OnДата_окончания_действияChanging(value);
                ReportPropertyChanging("Дата_окончания_действия");
                _Дата_окончания_действия = StructuralObject.SetValidValue(value, "Дата_окончания_действия");
                ReportPropertyChanged("Дата_окончания_действия");
                OnДата_окончания_действияChanged();
            }
        }
        private global::System.DateTime _Дата_окончания_действия;
        partial void OnДата_окончания_действияChanging(global::System.DateTime value);
        partial void OnДата_окончания_действияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Максимальная_сумма
        {
            get
            {
                return _Максимальная_сумма;
            }
            set
            {
                OnМаксимальная_суммаChanging(value);
                ReportPropertyChanging("Максимальная_сумма");
                _Максимальная_сумма = StructuralObject.SetValidValue(value, "Максимальная_сумма");
                ReportPropertyChanged("Максимальная_сумма");
                OnМаксимальная_суммаChanged();
            }
        }
        private global::System.Double _Максимальная_сумма;
        partial void OnМаксимальная_суммаChanging(global::System.Double value);
        partial void OnМаксимальная_суммаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Контактное_ЛицоНомер1
        {
            get
            {
                return _Контактное_ЛицоНомер1;
            }
            set
            {
                OnКонтактное_ЛицоНомер1Changing(value);
                ReportPropertyChanging("Контактное_ЛицоНомер1");
                _Контактное_ЛицоНомер1 = StructuralObject.SetValidValue(value, "Контактное_ЛицоНомер1");
                ReportPropertyChanged("Контактное_ЛицоНомер1");
                OnКонтактное_ЛицоНомер1Changed();
            }
        }
        private global::System.Int32 _Контактное_ЛицоНомер1;
        partial void OnКонтактное_ЛицоНомер1Changing(global::System.Int32 value);
        partial void OnКонтактное_ЛицоНомер1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ОрганизацияНомер1
        {
            get
            {
                return _ОрганизацияНомер1;
            }
            set
            {
                OnОрганизацияНомер1Changing(value);
                ReportPropertyChanging("ОрганизацияНомер1");
                _ОрганизацияНомер1 = StructuralObject.SetValidValue(value, "ОрганизацияНомер1");
                ReportPropertyChanged("ОрганизацияНомер1");
                OnОрганизацияНомер1Changed();
            }
        }
        private global::System.Int32 _ОрганизацияНомер1;
        partial void OnОрганизацияНомер1Changing(global::System.Int32 value);
        partial void OnОрганизацияНомер1Changed();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDB", "Контактное_ЛицоДоговор", "Контактное_Лицо")]
        public Контактное_Лицо Контактное_Лицо
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Контактное_Лицо>("ModelDB.Контактное_ЛицоДоговор", "Контактное_Лицо").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Контактное_Лицо>("ModelDB.Контактное_ЛицоДоговор", "Контактное_Лицо").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Контактное_Лицо> Контактное_ЛицоReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Контактное_Лицо>("ModelDB.Контактное_ЛицоДоговор", "Контактное_Лицо");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Контактное_Лицо>("ModelDB.Контактное_ЛицоДоговор", "Контактное_Лицо", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDB", "ОрганизацияДоговор", "Организация")]
        public Организация Организация
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Организация>("ModelDB.ОрганизацияДоговор", "Организация").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Организация>("ModelDB.ОрганизацияДоговор", "Организация").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Организация> ОрганизацияReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Организация>("ModelDB.ОрганизацияДоговор", "Организация");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Организация>("ModelDB.ОрганизацияДоговор", "Организация", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelDB", Name="Контактное_Лицо")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Контактное_Лицо : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Контактное_Лицо.
        /// </summary>
        /// <param name="номер">Исходное значение свойства Номер.</param>
        /// <param name="фИО">Исходное значение свойства ФИО.</param>
        /// <param name="телефон">Исходное значение свойства Телефон.</param>
        /// <param name="место_работы">Исходное значение свойства Место_работы.</param>
        /// <param name="адрес_проживания">Исходное значение свойства Адрес_проживания.</param>
        /// <param name="персональные_данные">Исходное значение свойства Персональные_данные.</param>
        public static Контактное_Лицо CreateКонтактное_Лицо(global::System.Int32 номер, global::System.String фИО, global::System.String телефон, global::System.String место_работы, global::System.String адрес_проживания, global::System.String персональные_данные)
        {
            Контактное_Лицо контактное_Лицо = new Контактное_Лицо();
            контактное_Лицо.Номер = номер;
            контактное_Лицо.ФИО = фИО;
            контактное_Лицо.Телефон = телефон;
            контактное_Лицо.Место_работы = место_работы;
            контактное_Лицо.Адрес_проживания = адрес_проживания;
            контактное_Лицо.Персональные_данные = персональные_данные;
            return контактное_Лицо;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Номер
        {
            get
            {
                return _Номер;
            }
            set
            {
                if (_Номер != value)
                {
                    OnНомерChanging(value);
                    ReportPropertyChanging("Номер");
                    _Номер = StructuralObject.SetValidValue(value, "Номер");
                    ReportPropertyChanged("Номер");
                    OnНомерChanged();
                }
            }
        }
        private global::System.Int32 _Номер;
        partial void OnНомерChanging(global::System.Int32 value);
        partial void OnНомерChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                OnФИОChanging(value);
                ReportPropertyChanging("ФИО");
                _ФИО = StructuralObject.SetValidValue(value, false, "ФИО");
                ReportPropertyChanged("ФИО");
                OnФИОChanged();
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Телефон
        {
            get
            {
                return _Телефон;
            }
            set
            {
                OnТелефонChanging(value);
                ReportPropertyChanging("Телефон");
                _Телефон = StructuralObject.SetValidValue(value, false, "Телефон");
                ReportPropertyChanged("Телефон");
                OnТелефонChanged();
            }
        }
        private global::System.String _Телефон;
        partial void OnТелефонChanging(global::System.String value);
        partial void OnТелефонChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Место_работы
        {
            get
            {
                return _Место_работы;
            }
            set
            {
                OnМесто_работыChanging(value);
                ReportPropertyChanging("Место_работы");
                _Место_работы = StructuralObject.SetValidValue(value, false, "Место_работы");
                ReportPropertyChanged("Место_работы");
                OnМесто_работыChanged();
            }
        }
        private global::System.String _Место_работы;
        partial void OnМесто_работыChanging(global::System.String value);
        partial void OnМесто_работыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Адрес_проживания
        {
            get
            {
                return _Адрес_проживания;
            }
            set
            {
                OnАдрес_проживанияChanging(value);
                ReportPropertyChanging("Адрес_проживания");
                _Адрес_проживания = StructuralObject.SetValidValue(value, false, "Адрес_проживания");
                ReportPropertyChanged("Адрес_проживания");
                OnАдрес_проживанияChanged();
            }
        }
        private global::System.String _Адрес_проживания;
        partial void OnАдрес_проживанияChanging(global::System.String value);
        partial void OnАдрес_проживанияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Персональные_данные
        {
            get
            {
                return _Персональные_данные;
            }
            set
            {
                OnПерсональные_данныеChanging(value);
                ReportPropertyChanging("Персональные_данные");
                _Персональные_данные = StructuralObject.SetValidValue(value, false, "Персональные_данные");
                ReportPropertyChanged("Персональные_данные");
                OnПерсональные_данныеChanged();
            }
        }
        private global::System.String _Персональные_данные;
        partial void OnПерсональные_данныеChanging(global::System.String value);
        partial void OnПерсональные_данныеChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelDB", Name="Организация")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Организация : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Организация.
        /// </summary>
        /// <param name="номер">Исходное значение свойства Номер.</param>
        /// <param name="название">Исходное значение свойства Название.</param>
        /// <param name="адрес">Исходное значение свойства Адрес.</param>
        /// <param name="фИО_Начальника">Исходное значение свойства ФИО_Начальника.</param>
        public static Организация CreateОрганизация(global::System.Int32 номер, global::System.String название, global::System.String адрес, global::System.String фИО_Начальника)
        {
            Организация организация = new Организация();
            организация.Номер = номер;
            организация.Название = название;
            организация.Адрес = адрес;
            организация.ФИО_Начальника = фИО_Начальника;
            return организация;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Номер
        {
            get
            {
                return _Номер;
            }
            set
            {
                if (_Номер != value)
                {
                    OnНомерChanging(value);
                    ReportPropertyChanging("Номер");
                    _Номер = StructuralObject.SetValidValue(value, "Номер");
                    ReportPropertyChanged("Номер");
                    OnНомерChanged();
                }
            }
        }
        private global::System.Int32 _Номер;
        partial void OnНомерChanging(global::System.Int32 value);
        partial void OnНомерChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Название
        {
            get
            {
                return _Название;
            }
            set
            {
                OnНазваниеChanging(value);
                ReportPropertyChanging("Название");
                _Название = StructuralObject.SetValidValue(value, false, "Название");
                ReportPropertyChanged("Название");
                OnНазваниеChanged();
            }
        }
        private global::System.String _Название;
        partial void OnНазваниеChanging(global::System.String value);
        partial void OnНазваниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Адрес
        {
            get
            {
                return _Адрес;
            }
            set
            {
                OnАдресChanging(value);
                ReportPropertyChanging("Адрес");
                _Адрес = StructuralObject.SetValidValue(value, false, "Адрес");
                ReportPropertyChanged("Адрес");
                OnАдресChanged();
            }
        }
        private global::System.String _Адрес;
        partial void OnАдресChanging(global::System.String value);
        partial void OnАдресChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ФИО_Начальника
        {
            get
            {
                return _ФИО_Начальника;
            }
            set
            {
                OnФИО_НачальникаChanging(value);
                ReportPropertyChanging("ФИО_Начальника");
                _ФИО_Начальника = StructuralObject.SetValidValue(value, false, "ФИО_Начальника");
                ReportPropertyChanged("ФИО_Начальника");
                OnФИО_НачальникаChanged();
            }
        }
        private global::System.String _ФИО_Начальника;
        partial void OnФИО_НачальникаChanging(global::System.String value);
        partial void OnФИО_НачальникаChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ModelDB", Name="ПриложениеДоговора")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ПриложениеДоговора : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ПриложениеДоговора.
        /// </summary>
        /// <param name="номер">Исходное значение свойства Номер.</param>
        /// <param name="договорНомер">Исходное значение свойства ДоговорНомер.</param>
        /// <param name="типДокумента">Исходное значение свойства ТипДокумента.</param>
        /// <param name="содержание">Исходное значение свойства Содержание.</param>
        /// <param name="датаСоставления">Исходное значение свойства ДатаСоставления.</param>
        /// <param name="договорНомер1">Исходное значение свойства ДоговорНомер1.</param>
        public static ПриложениеДоговора CreateПриложениеДоговора(global::System.Int32 номер, global::System.Guid договорНомер, global::System.String типДокумента, global::System.String содержание, global::System.String датаСоставления, global::System.Int32 договорНомер1)
        {
            ПриложениеДоговора приложениеДоговора = new ПриложениеДоговора();
            приложениеДоговора.Номер = номер;
            приложениеДоговора.ДоговорНомер = договорНомер;
            приложениеДоговора.ТипДокумента = типДокумента;
            приложениеДоговора.Содержание = содержание;
            приложениеДоговора.ДатаСоставления = датаСоставления;
            приложениеДоговора.ДоговорНомер1 = договорНомер1;
            return приложениеДоговора;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Номер
        {
            get
            {
                return _Номер;
            }
            set
            {
                if (_Номер != value)
                {
                    OnНомерChanging(value);
                    ReportPropertyChanging("Номер");
                    _Номер = StructuralObject.SetValidValue(value, "Номер");
                    ReportPropertyChanged("Номер");
                    OnНомерChanged();
                }
            }
        }
        private global::System.Int32 _Номер;
        partial void OnНомерChanging(global::System.Int32 value);
        partial void OnНомерChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ДоговорНомер
        {
            get
            {
                return _ДоговорНомер;
            }
            set
            {
                OnДоговорНомерChanging(value);
                ReportPropertyChanging("ДоговорНомер");
                _ДоговорНомер = StructuralObject.SetValidValue(value, "ДоговорНомер");
                ReportPropertyChanged("ДоговорНомер");
                OnДоговорНомерChanged();
            }
        }
        private global::System.Guid _ДоговорНомер;
        partial void OnДоговорНомерChanging(global::System.Guid value);
        partial void OnДоговорНомерChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ТипДокумента
        {
            get
            {
                return _ТипДокумента;
            }
            set
            {
                OnТипДокументаChanging(value);
                ReportPropertyChanging("ТипДокумента");
                _ТипДокумента = StructuralObject.SetValidValue(value, false, "ТипДокумента");
                ReportPropertyChanged("ТипДокумента");
                OnТипДокументаChanged();
            }
        }
        private global::System.String _ТипДокумента;
        partial void OnТипДокументаChanging(global::System.String value);
        partial void OnТипДокументаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Содержание
        {
            get
            {
                return _Содержание;
            }
            set
            {
                OnСодержаниеChanging(value);
                ReportPropertyChanging("Содержание");
                _Содержание = StructuralObject.SetValidValue(value, false, "Содержание");
                ReportPropertyChanged("Содержание");
                OnСодержаниеChanged();
            }
        }
        private global::System.String _Содержание;
        partial void OnСодержаниеChanging(global::System.String value);
        partial void OnСодержаниеChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ДатаСоставления
        {
            get
            {
                return _ДатаСоставления;
            }
            set
            {
                OnДатаСоставленияChanging(value);
                ReportPropertyChanging("ДатаСоставления");
                _ДатаСоставления = StructuralObject.SetValidValue(value, false, "ДатаСоставления");
                ReportPropertyChanged("ДатаСоставления");
                OnДатаСоставленияChanged();
            }
        }
        private global::System.String _ДатаСоставления;
        partial void OnДатаСоставленияChanging(global::System.String value);
        partial void OnДатаСоставленияChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ДоговорНомер1
        {
            get
            {
                return _ДоговорНомер1;
            }
            set
            {
                OnДоговорНомер1Changing(value);
                ReportPropertyChanging("ДоговорНомер1");
                _ДоговорНомер1 = StructuralObject.SetValidValue(value, "ДоговорНомер1");
                ReportPropertyChanged("ДоговорНомер1");
                OnДоговорНомер1Changed();
            }
        }
        private global::System.Int32 _ДоговорНомер1;
        partial void OnДоговорНомер1Changing(global::System.Int32 value);
        partial void OnДоговорНомер1Changed();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ModelDB", "ДоговорПриложениеДоговора", "Договор")]
        public Договор Договор
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Договор>("ModelDB.ДоговорПриложениеДоговора", "Договор").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Договор>("ModelDB.ДоговорПриложениеДоговора", "Договор").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Договор> ДоговорReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Договор>("ModelDB.ДоговорПриложениеДоговора", "Договор");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Договор>("ModelDB.ДоговорПриложениеДоговора", "Договор", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
